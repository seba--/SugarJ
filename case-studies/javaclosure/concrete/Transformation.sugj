package javaclosure.concrete;

import concretesyntax.ConcreteJava;

import javaclosure.Syntax;
import javaclosure.ToRefType;

import org.sugarj.languages.Java;

/*
 * see http://javac.info/closures-v06a.html
 */
public sugar Transformation {
  desugarings
    transFun
    transLambda
  
  
  rules
    transFun :
         java |[ #~result(~argument) ]|
      -> java |[ javaclosure.Function<? extends ~reftype:result', ? super ~reftype:argument'> ]|
    with
      result'   := <toRefType> result;
      argument' := <toRefType> argument

    transLambda :
         java |[ #~result(~argument ~id:x) ~block:body ]|
      -> java |[ new javaclosure.Function<~result', ~argument'>() {
        	         public ~result' invoke(~argument' ~id:x)
        	           ~block:body
                 } ]|
      with
        result' := <toRefType> result;
        argument' := <toRefType> argument
}