package javaclosure.alternative;

import javaclosure.Syntax;

public sugar Arrows {
  context-free syntax
    JavaType "->" JavaType   -> JavaType {right, cons("ArrowFunctionType")}
    "(" JavaType ")"         -> JavaType {bracket}
  
  context-free syntax
    "fun" "(" JavaFormalParam ")" "->" JavaType JavaBlock -> JavaExpr {cons("ArrowBlockLambda")}
  
  desugarings
    \ ArrowFunctionType(arg, res) -> ClosureType(res, arg) \
    \ ArrowBlockLambda(arg, resType, body) -> Closure(resType, arg, body) \
  
  %% The remaining priorities follow by transitivity.
  context-free priorities
    "#" JavaType "(" JavaFormalParam ")" JavaExpr -> JavaExpr
  > JavaType "->" JavaType -> JavaType {cons("ArrowFunctionType")}
}
